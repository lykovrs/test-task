
.clearfix:after {
  content: '.';
  display: block;
  clear: both;
  visibility: hidden;
  overflow: hidden;
  height: 0;
}

// Сброс стандартных стилей браузеров

html, body, div, span, applet, object, iframe, h1, h2, h3, h4, h5, h6, p, blockquote, pre, a, abbr, acronym, address, big, cite, code, del, dfn, em, img, ins, kbd, q, s, samp, small, strike, strong, sub, sup, tt, var, b, u, i, center, dl, dt, dd, ol, ul, li, fieldset, form, label, legend, table, caption, tbody, tfoot, thead, tr, th, td, article, aside, canvas, details, embed, figure, figcaption, footer, header, menu, nav, output, ruby, section, summary, time, mark, audio, video {
  margin: 0;
  padding: 0;
  border: 0;
  font-size: 100%;
  font: inherit;
  vertical-align: baseline;
  outline: none;
}
html {
  height: 101%; /* always display scrollbars */
}

body {
  font-size: 62.5%;
  line-height: 1;
  font-family: Arial, Tahoma, Verdana, sans-serif;
}

article, aside, details, figcaption, figure, footer, header, menu, nav, section {
  display: block;
}

ol, ul {
  list-style: none;
}

blockquote, q {
  quotes: none;
}

blockquote:before, blockquote:after, q:before, q:after {
  content: '';
  content: none;
}
strong {
  font-weight: bold;
}

input {
  outline: none;
}

table {
  border-collapse: collapse;
  border-spacing: 0;
}

img {
  border: 0;
  max-width: 100%;
}

a {
  text-decoration: none;
}

a:hover {
  text-decoration: underline;
}


// Формируем базовые переменные

$baseUrl: "/";

$linkColor: #25ACEA;
$linkColorHover: #007EA7;

$orange: #FF6A1C;
$darkOrange: #DB3F02;
$blue: #25ACEA;
$red: #d80204;
$green: #005f12;

$baseFontFamily: Arial, "Helvetica CY", "Nimbus Sans L", sans-serif;
$courierFontFamily: "Courier New", "Nimbus Mono L", monospace;

$ltie8: ".ltie8";
$pie-url: "/_css/PIE.htc";


// Миксины

@mixin inline-block($valign: "none") {
  display: -moz-inline-stack;
  display: inline-block;
  *zoom: 1;
  *display: inline;
  @if $valign and $valign != "none" {
	vertical-align: $valign;
  }
}

@mixin rounded($radius: 5px) {
  -moz-border-radius: $radius;
  -webkit-border-radius: $radius;
  -khtml-border-radius: $radius;
  border-radius: $radius;
}

@mixin shadowed($shadow) {
  -moz-box-shadow: $shadow;
  -webkit-box-shadow: $shadow;
  box-shadow: $shadow;
}

@mixin linear-gradient($startColor, $endColor, $middleColor) {
  background: $middleColor;
  background: -webkit-gradient(linear, 0 0, 0 100%, from($startColor) to($endColor));
  background: -webkit-linear-gradient($startColor, $endColor);
  background: -moz-linear-gradient($startColor, $endColor);
  background: -ms-linear-gradient($startColor, $endColor);
  background: -o-linear-gradient($startColor, $endColor);
  background: linear-gradient($startColor, $endColor);
}

@mixin animation($name: true, $duration: true, $timing_function: true, $delay: false, $iteration_count: false, $direction: false) {
  @if $name {
	-webkit-animation-name: $name;
	-moz-animation-name: $name;
	-ms-animation-name: $name;
  }
  @if $duration {
	-webkit-animation-duration: $duration;
	-moz-animation-duration: $duration;
	-ms-animation-duration: $duration;
  }
  @if $timing_function {
	-webkit-animation-timing-function: $timing_function;
	-moz-animation-timing-function: $timing_function;
	-ms-animation-timing-function: $timing_function;
  }
  @if $delay {
	-webkit-animation-delay: $delay;
	-moz-animation-delay: $delay;
	-ms-animation-delay: $delay;
  }
  @if $iteration_count {
	-webkit-animation-iteration-count: $iteration_count;
	-moz-animation-iteration-count: $iteration_count;
	-ms-animation-iteration-count: $iteration_count;
  }
  @if $direction {
	-webkit-animation-direction: $direction;
	-moz-animation-direction: $direction;
	-ms-animation-direction: $direction;
  }
}

@mixin background-clip($clip) {
  -webkit-background-clip: $clip;
  -moz-background-clip: $clip;
  -o-background-clip: $clip;
  background-clip: $clip;
}

@mixin min-height($value) {
  min-height: $value;
  height: $value;
  height: auto !important;
}

@mixin box-sizing($value) {
  -moz-box-sizing: $value;
  -webkit-box-sizing: $value;
  box-sizing: $value;
}

@mixin filter($filter) {
  -webkit-filter: $filter;
  -moz-filter: $filter;
  -o-filter: $filter;
  filter: $filter;
}

@mixin transition($transition) {
  -webkit-transition: $transition;
  -moz-transition: $transition;
  -o-transition: $transition;
  transition: $transition;
}

@mixin columns($count, $gap) {
  -webkit-column-count: $count;
  -webkit-column-gap: $gap;
  -moz-column-count: $count;
  -moz-column-gap: $gap;
  -o-column-count: $count;
  -o-column-gap: $gap;
  column-count: $count;
  column-gap: $gap;
}

@mixin columns-rule($size, $style, $color) {
  -webkit-column-rule-width: $size;
  -webkit-column-rule-style: $style;
  -webkit-column-rule-color: $color;
  -moz-column-rule-width: $size;
  -moz-column-rule-style: $style;
  -moz-column-rule-color: $color;
  -o-column-rule-width: $size;
  -o-column-rule-style: $style;
  -o-column-rule-color: $color;
  column-rule-width: $size;
  column-rule-style: $style;
  column-rule-color: $color;
}

@mixin displayfix {
  *zoom: 1;
  *display: inline;
}

@mixin gradient-ie($start, $end) {
  *zoom: 1;
  filter: progid:DXImageTransform.Microsoft.gradient(startColorstr='#{$start}', endColorstr='#{$end}');
  -ms-filter: progid:DXImageTransform.Microsoft.gradient(startColorstr='#{$start}', endColorstr='#{$end}');
}



